// Code generated by protoc-gen-go. DO NOT EDIT.
// source: payload.proto

/*
Package payload is a generated protocol buffer package.

It is generated from these files:
	payload.proto

It has these top-level messages:
	Email
	Expression
*/
package payload

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Expression_Operation int32

const (
	Expression_ADD Expression_Operation = 0
	Expression_SUB Expression_Operation = 1
	Expression_MUL Expression_Operation = 2
	Expression_DIV Expression_Operation = 3
)

var Expression_Operation_name = map[int32]string{
	0: "ADD",
	1: "SUB",
	2: "MUL",
	3: "DIV",
}
var Expression_Operation_value = map[string]int32{
	"ADD": 0,
	"SUB": 1,
	"MUL": 2,
	"DIV": 3,
}

func (x Expression_Operation) String() string {
	return proto.EnumName(Expression_Operation_name, int32(x))
}
func (Expression_Operation) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{1, 0} }

type Email struct {
	From    string `protobuf:"bytes,1,opt,name=from" json:"from,omitempty"`
	To      string `protobuf:"bytes,2,opt,name=to" json:"to,omitempty"`
	Subject string `protobuf:"bytes,3,opt,name=subject" json:"subject,omitempty"`
	Body    string `protobuf:"bytes,4,opt,name=body" json:"body,omitempty"`
}

func (m *Email) Reset()                    { *m = Email{} }
func (m *Email) String() string            { return proto.CompactTextString(m) }
func (*Email) ProtoMessage()               {}
func (*Email) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Email) GetFrom() string {
	if m != nil {
		return m.From
	}
	return ""
}

func (m *Email) GetTo() string {
	if m != nil {
		return m.To
	}
	return ""
}

func (m *Email) GetSubject() string {
	if m != nil {
		return m.Subject
	}
	return ""
}

func (m *Email) GetBody() string {
	if m != nil {
		return m.Body
	}
	return ""
}

type Expression struct {
	Operand1  int64                `protobuf:"varint,1,opt,name=operand1" json:"operand1,omitempty"`
	Operand2  int64                `protobuf:"varint,2,opt,name=operand2" json:"operand2,omitempty"`
	Operation Expression_Operation `protobuf:"varint,3,opt,name=operation,enum=payload.Expression_Operation" json:"operation,omitempty"`
}

func (m *Expression) Reset()                    { *m = Expression{} }
func (m *Expression) String() string            { return proto.CompactTextString(m) }
func (*Expression) ProtoMessage()               {}
func (*Expression) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Expression) GetOperand1() int64 {
	if m != nil {
		return m.Operand1
	}
	return 0
}

func (m *Expression) GetOperand2() int64 {
	if m != nil {
		return m.Operand2
	}
	return 0
}

func (m *Expression) GetOperation() Expression_Operation {
	if m != nil {
		return m.Operation
	}
	return Expression_ADD
}

func init() {
	proto.RegisterType((*Email)(nil), "payload.Email")
	proto.RegisterType((*Expression)(nil), "payload.Expression")
	proto.RegisterEnum("payload.Expression_Operation", Expression_Operation_name, Expression_Operation_value)
}

func init() { proto.RegisterFile("payload.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 219 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x2d, 0x48, 0xac, 0xcc,
	0xc9, 0x4f, 0x4c, 0xd1, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x87, 0x72, 0x95, 0x22, 0xb9,
	0x58, 0x5d, 0x73, 0x13, 0x33, 0x73, 0x84, 0x84, 0xb8, 0x58, 0xd2, 0x8a, 0xf2, 0x73, 0x25, 0x18,
	0x15, 0x18, 0x35, 0x38, 0x83, 0xc0, 0x6c, 0x21, 0x3e, 0x2e, 0xa6, 0x92, 0x7c, 0x09, 0x26, 0xb0,
	0x08, 0x53, 0x49, 0xbe, 0x90, 0x04, 0x17, 0x7b, 0x71, 0x69, 0x52, 0x56, 0x6a, 0x72, 0x89, 0x04,
	0x33, 0x58, 0x10, 0xc6, 0x05, 0xe9, 0x4e, 0xca, 0x4f, 0xa9, 0x94, 0x60, 0x81, 0xe8, 0x06, 0xb1,
	0x95, 0x36, 0x31, 0x72, 0x71, 0xb9, 0x56, 0x14, 0x14, 0xa5, 0x16, 0x17, 0x67, 0xe6, 0xe7, 0x09,
	0x49, 0x71, 0x71, 0xe4, 0x17, 0xa4, 0x16, 0x25, 0xe6, 0xa5, 0x18, 0x82, 0x2d, 0x61, 0x0e, 0x82,
	0xf3, 0x91, 0xe4, 0x8c, 0xc0, 0xd6, 0x21, 0xe4, 0x8c, 0x84, 0xac, 0xb9, 0x38, 0xc1, 0xec, 0x92,
	0xcc, 0xfc, 0x3c, 0xb0, 0xb5, 0x7c, 0x46, 0xb2, 0x7a, 0x30, 0xdf, 0x20, 0xcc, 0xd7, 0xf3, 0x87,
	0x29, 0x0a, 0x42, 0xa8, 0x57, 0xd2, 0xe7, 0xe2, 0x84, 0x8b, 0x0b, 0xb1, 0x73, 0x31, 0x3b, 0xba,
	0xb8, 0x08, 0x30, 0x80, 0x18, 0xc1, 0xa1, 0x4e, 0x02, 0x8c, 0x20, 0x86, 0x6f, 0xa8, 0x8f, 0x00,
	0x13, 0x88, 0xe1, 0xe2, 0x19, 0x26, 0xc0, 0x9c, 0xc4, 0x06, 0x0e, 0x1f, 0x63, 0x40, 0x00, 0x00,
	0x00, 0xff, 0xff, 0x1a, 0x1d, 0x45, 0x1f, 0x30, 0x01, 0x00, 0x00,
}
